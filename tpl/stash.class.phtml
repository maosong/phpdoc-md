# <?= $this->className ?>  

<?= $this->classDescription->short ?>

<?php if ($this->classDescription->long) : ?>

<?= $this->classDescription->long ?>  
<?php endif ?>

<?php if ($interfaces = $this->interfaces): ?>
## Implements:
<?= join(', ', $interfaces); ?>
<?php endif ?>


<?php if ($this->parentClass): ?>
## Extend:

<?= $this->parentClass ?>
<?php endif ?>

## Methods

| Name | Description |
| ---- | ----------- |
<?php foreach ($this->methods as $name => $info) : ?>
| <?= preg_replace('/^_/', '\_', $name) ?> | <?= preg_replace('/^_/', '\_', $info->shortDescription) ?> |
<?php endforeach ?>

<?php if ($this->inheritedMethods): ?>
## Inherited methods

| Name | Description |
|------|-------------|
<?php foreach ($this->inheritedMethods as $name => $info) : ?>
| <?= preg_replace('/^_/', '\_', $name) ?> | <?= preg_replace('/^_/', '\_', $info->shortDescription) ?> |
<?php endforeach ?>
<?php endif ?>


<?php foreach ($this->methods as $name => $info) : ?>

### <?= $this->classShortName ?>::<?= $name ?>  

**Description**

```php
<?= $info->visibility ?> <?= $name ?> (<?= join(', ', $info->argumentsList) ?: 'void' ?>)
```

<?= $info->shortDescription ?> 

<?= str_replace("\n", "  \n", $info->longDescription) ?> 

**Parameters**

<?php if (!$info->argumentsDescription) : ?>
`This function has no parameters.`
<?php else : ?>
<?php foreach ($info->argumentsDescription as $param) : ?>
* **(<?= join('|', $param->type) ?>)** <?= $param->name ?>
<?php if ($param->desc) : ?>
: <?php
    if (strpos($param->desc, '```') === 0) {
        echo "\n" . $param->desc;
    } else if (strpos($param->desc, '```') !== false) {
        echo $param->desc;
    } else {
        echo str_replace("\n", "  \n", $param->desc);
    }
?>
<?php endif ?>

<?php endforeach ?>
<?php endif ?>


**Return Values**

<?php foreach ($info->returnValue as $param) : ?>
`<?= join('|', $param->type) ?>`

<?php if ($param->desc) : ?>
> <?= str_replace("\n", "  \n", $param->desc) ?>  
<?php endif ?>

<?php endforeach ?>


<?php endforeach ?>
